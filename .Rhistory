actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
47/69
32/43
threshold <- 38/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
threshold <- 36/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
47/69
34/43
model16<- glm(survive ~    shock_type +  map+
mcvp+ bsi
, family = binomial(link = "logit"), data = pre)
summary(model16)
threshold <- 50/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
threshold <- 20/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
threshold <- 30/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
42/69
threshold <- 35/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
45/69
threshold <- 40/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
48/69
34/43
threshold <- 41/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
threshold <- 43/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
34/43
48/69
threshold <- 42/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
50/69
34/43
threshold <- 41/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused
confused <- table(predict.final,actual.final)
confused
threshold <- 39/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
48/69
threshold <- 35/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
45/69
threshold <- 30/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
threshold <- 42/112
predict.final <- ifelse(predict(model16,type = "response")>threshold,1,0)
actual.final <- model16$y
confused <- table(predict.final,actual.final)
confused
50/69
34/43
threshold <- 36/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
47/69
threshold <- 43/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
32/43
49/69
threshold <- 50/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
31/43
57/69
threshold <- 30/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
36/43
threshold <- 35/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused
confused <- table(predict.final,actual.final)
36/43
44/69
threshold <- 30/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
44/69
threshold <- 43/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
confused <- table(predict.final,actual.final)
actual.final <- final$y
confused
32/43
49/69
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = age))
source('~/DAR/logDAR.R', echo=TRUE)
source('~/DAR/logDAR.R', echo=TRUE)
boxplot(survive,shock_type)
hist(shock_type,survive)
hist(shock_type)
barplot(shock_type)
cont <- data.frame(age, ht, sbp,map,hr,dbp,mcvp,bsi,ci,at,mct,uo,pvi,rci,hg,hct)
corrplot(cor(cont))
xtable(corrplot(cor(cont)))
library(effsize)
library(xtable)
cont <- data.frame(age, ht, sbp,map,hr,dbp,mcvp,bsi,ci,at,mct,uo,pvi,rci,hg,hct)
corrplot(cor(cont))
xtable(corrplot(cor(cont)))
xtable(corrplot(cor(cont)))
final.cont <- data.frame(map,bsi,uo,mcvp,rci)
corrplot(cor(final.cont))
cont <- data.frame(age, ht, sbp,map,hr,dbp,mcvp,bsi,ci,at,mct,uo,pvi,rci,hg,hct)
corrplot(cor(cont))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = age))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = ht))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = sbp))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = map))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = hr))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = dbp))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = mcvp))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = bsi))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = ci))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = at))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = mct))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = rci))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = uo))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = hg))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = pvi))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = hct))
hist(age)
hist(ht)
ggplot()+
geom_histogram(mapping = aes(x = age))
ggplot()+
geom_bar(mapping = aes(x = sex))
ggplot()+
geom_bar(mapping = aes(x = survive))
hist(shock_type)
ggplot()+
geom_bar(mapping = aes(x = shock_type))
hist(sbp)
hist(pre$sbp)
hist(post$sbp)
summary(final)
exp(coef(final))
exp(final$coefficients)
exp(confint(final))
xtable(exp(confint(final)))
exp(coef(final))
coef(final)
summary(final)
coef(final)
exp(coef(final))
100-36
1-97
1-97
1-.97
View(data)
View(data)
70(-.03)
70*(-.03)
2.58+70*(-.03)+100*(.15)-.03*(150)-.006*(75)-.005*(150)
exp(9.78)
####
one.fourth.root=function(x){
x^0.25
}
source("examine.logistic.reg.R")
source("examine.logistic.reg.R")
# Consider model
dat.glm <-glm(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, family = binomial(link = "logit"), data = pre)
dat.mf <- model.frame(dat.glm)
w <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, family = binomial(link = "logit"), data = pre, FUN = sum)
w <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
n <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
w.n <- data.frame(w, trials = n$survive, prop = round(w$survive/n$survive,2))
g = 21 # number of categories
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
g = 5 # number of categories
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
mod.prelim <- glm(formula = survive/trials ~ survive_interval+shock_type+map,mcvp,rci,bsi,uo,
family = binomial(link = logit), data = v.m, weights = trials)
# Diagnostic plots
v <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
m <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
v.m <- data.frame(v, trials = m$survive, prop = round(v$survive/m$survive,2))
mod.prelim <- glm(formula = survive/trials ~ survive_interval+shock_type+map,mcvp,rci,bsi,uo,
family = binomial(link = logit), data = v.m, weights = trials)
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
mod.prelim <- glm(formula = survive/trials ~ survive_interval+shock_type+map+mcvp+rci+bsi+uo,
family = binomial(link = logit), data = v.m, weights = trials)
save = examine.logistic.reg(mod.prelim, identify.points=T, scale.n=one.fourth.root, scale.cookd=sqrt)
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
g = 2 # number of categories
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
g = 0 # number of categories
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
g = `` # number of categories
g = 1 # number of categories
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
# Diagnostic plots
v <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
m <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
v.m <- data.frame(v, trials = m$survive, prop = round(v$survive/m$survive,2))
mod.prelim <- glm(formula = survive/trials ~ survive_interval+shock_type+map+mcvp+rci+bsi+uo,
family = binomial(link = logit), data = v.m, weights = trials)
save = examine.logistic.reg(mod.prelim, identify.points=T, scale.n=one.fourth.root, scale.cookd=sqrt)
g = 2 # number of categories
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
g = 1 # number of categories
survival_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
# Diagnostic plots
v <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
m <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
v.m <- data.frame(v, trials = m$survive, prop = round(v$survive/m$survive,2))
mod.prelim <- glm(formula = survive/trials ~ survive_interval+shock_type+map+mcvp+rci+bsi+uo,
family = binomial(link = logit), data = v.m, weights = trials)
survive_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
# Diagnostic plots
v <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
m <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
v.m <- data.frame(v, trials = m$survive, prop = round(v$survive/m$survive,2))
mod.prelim <- glm(formula = survive/trials ~ survive_interval+shock_type+map+mcvp+rci+bsi+uo,
family = binomial(link = logit), data = v.m, weights = trials)
save = examine.logistic.reg(mod.prelim, identify.points=T, scale.n=one.fourth.root, scale.cookd=sqrt)
mod.prelim <- glm(formula = survive/trials ~ survive_interval+shock_type+map+mcvp+rci+bsi+uo,
family = binomial(link = logit), data = v.m, weights = trials)
mod.prelim <- glm(formula = survive/trials ~ survive_interval+shock_type+map+mcvp+rci+bsi+uo,
family = binomial(link = logit), data = v.m, weights = trials)
save = examine.logistic.reg(mod.prelim, identify.points=T, scale.n=one.fourth.root, scale.cookd=sqrt)
bsi_interval = cut(bsi, quantile(bsi, 0:g/g), include.lowest = TRUE)
mcvp_interval = cut(mcvp, quantile(mcvp, 0:g/g), include.lowest = TRUE)
uo_interval = cut(uo, quantile(uo, 0:g/g), include.lowest = TRUE)
rci_interval = cut(rci, quantile(rci, 0:g/g), include.lowest = TRUE)
mod.prelim <- glm(formula = survive/trials ~ map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval+uo_interval,
family = binomial(link = logit), data = v.m, weights = trials)
map_interval = cut(map, quantile(map, 0:g/g), include.lowest = TRUE)
mod.prelim <- glm(formula = survive/trials ~ map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval+uo_interval,
family = binomial(link = logit), data = v.m, weights = trials)
mod.prelim <- glm(formula = survive/trials ~ map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval+uo_interval,
family = binomial(link = logit), data = v.m, weights = trials)
save = examine.logistic.reg(mod.prelim, identify.points=T, scale.n=one.fourth.root, scale.cookd=sqrt)
w <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
n <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
w.n <- data.frame(w, trials = n$survive, prop = round(w$survive/n$survive,2))
g = 5 # number of categories
map_interval = cut(map, quantile(map, 0:g/g), include.lowest = TRUE)
mcvp_interval = cut(mcvp, quantile(mcvp, 0:g/g), include.lowest = TRUE)
bsi_interval = cut(bsi, quantile(bsi, 0:g/g), include.lowest = TRUE)
uo_interval = cut(uo, quantile(uo, 0:g/g), include.lowest = TRUE)
rci_interval = cut(rci, quantile(rci, 0:g/g), include.lowest = TRUE)
uo_interval = cut(uo, quantile(uo, 0:g/g), include.lowest = TRUE)
uo_interval = cut(uo, quantile(uo, 0:g/g), include.lowest = TRUE)
mod.prelim <- glm(formula = survive/trials ~ map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval,
family = binomial(link = logit), data = v.m, weights = trials)
source('~/DAR/trash.R')
# Diagnostic plots
v <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
m <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
v.m <- data.frame(v, trials = m$survive, prop = round(v$survive/m$survive,2))
mod.prelim <- glm(formula = survive/trials ~ map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval,
family = binomial(link = logit), data = v.m, weights = trials)
save = examine.logistic.reg(mod.prelim, identify.points=T, scale.n=one.fourth.root, scale.cookd=sqrt)
map_interval = cut(map, quantile(map, 0:g/g), include.lowest = TRUE)
v.m <- data.frame(v, trials = m$survive, prop = round(v$survive/m$survive,2))
mod.prelim <- glm(formula = survive/trials ~ map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval,
family = binomial(link = logit), data = v.m, weights = trials)
save = examine.logistic.reg(mod.prelim, identify.points=T, scale.n=one.fourth.root, scale.cookd=sqrt)
mod.prelim <- glm(formula = survive/trials ~ map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval,
family = binomial(link = logit), data = v.m, weights = trials)
map_interval = cut(map, quantile(map, 0:g/g), include.lowest = TRUE)
mcvp_interval = cut(mcvp, quantile(mcvp, 0:g/g), include.lowest = TRUE)
bsi_interval = cut(bsi, quantile(bsi, 0:g/g), include.lowest = TRUE)
rci_interval = cut(rci, quantile(rci, 0:g/g), include.lowest = TRUE)
# Diagnostic plots
v <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
m <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
v.m <- data.frame(v, trials = m$survive, prop = round(v$survive/m$survive,2))
mod.prelim <- glm(formula = survive/trials ~ map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval,
family = binomial(link = logit), data = v.m, weights = trials)
map_interval = cut(map, quantile(map, 0:g/g), include.lowest = TRUE)
mcvp_interval = cut(mcvp, quantile(mcvp, 0:g/g), include.lowest = TRUE)
bsi_interval = cut(bsi, quantile(bsi, 0:g/g), include.lowest = TRUE)
rci_interval = cut(rci, quantile(rci, 0:g/g), include.lowest = TRUE)
# Diagnostic plots
v <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
m <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
v.m <- data.frame(v, trials = m$survive, prop = round(v$survive/m$survive,2))
mod.prelim <- glm(formula = survive/trials ~ map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval,
family = binomial(link = logit), data = v.m, weights = trials)
mod.prelim <- glm(formula = survive/trials ~ shock_type+mcvp_interval+
rci_interval+bsi_interval,
family = binomial(link = logit), data = v.m, weights = trials)
uo_interval = cut(uo, quantile(uo, 0:g/g), include.lowest = TRUE)
rci_interval = cut(rci, quantile(rci, 0:g/g), include.lowest = TRUE)
# Diagnostic plots
v <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
m <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
v.m <- data.frame(v, trials = m$survive, prop = round(v$survive/m$survive,2))
mod.prelim <- glm(formula = survive/trials ~ uo_interval+map_interval+shock_type+mcvp_interval+
rci_interval+bsi_interval,
family = binomial(link = logit), data = v.m, weights = trials)
survive_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
g = 10 # number of categories
survive_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)
shock_type = cut(shock_type, quantile(shock_type, 0:g/g), include.lowest = TRUE)
# Consider model
dat.glm <- glm(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, family = binomial, data = pre)
dat.mf <- model.frame(dat.glm)
## Covariate pattern: too many EVPs!
w <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
n <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
w.n <- data.frame(w, trials = n$survive, prop = round(w$survive/n$survive,2))
dim(w.n)
# Create EVPs by binning continuous covariates
g = 8 # number of categories
uo_interval = cut(uo, quantile(uo, 0:g/g), include.lowest = TRUE)  # Creates factor with levels 1,2,...,g
levels(uo_interval)
mcvp_interval = cut(mcvp, quantile(mcvp, 0:g/g), include.lowest = TRUE)  # Creates factor with levels 1,2,...,g
levels(mcvp_interval)
# Diagnostic plots
w <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = sum)
n <- aggregate(formula = survive ~ shock_type + map + mcvp + bsi + uo +
rci, data = pre, FUN = length)
w.n <- data.frame(w, trials = n$survive, prop = round(w$survive/n$survive,2))
mod.prelim1 <- glm(formula = survive/trials ~ mcvp_interval+rci+map+shock_type+bsi,
family = binomial(link = logit), data = w.n, weights = trials)
survive_interval = cut(survive, quantile(survive, 0:g/g), include.lowest = TRUE)  # Creates factor with levels 1,2,...,g
mod.prelim1 <- glm(formula = survive/trials ~ mcvp_interval+rci+map+shock_type+bsi,
family = binomial(link = logit), data = w.n, weights = trials)
mod.prelim1 <- glm(formula = survive/trials ~ mcvp+rci+map+shock_type+bsi,
family = binomial(link = logit), data = w.n, weights = trials)
save1 = examine.logistic.reg(mod.prelim1, identify.points=T, scale.n=one.fourth.root, scale.cookd=sqrt)
p = length(mod.prelim1$coef) # number of parameters in model (# coefficients)
ck.out = abs(w.n.diag1$std.res)>2 | w.n.diag1$cookd>4/nrow(w.n) | w.n.diag1$h > 3*p/nrow(w.n)
extract.EVPs = w.n.diag1[ck.out, ]
extract.EVPs
source('~/DAR/trash.R')
save1 = examine.logistic.reg(mod.prelim1, identify.points=T, scale.n=one.fourth.root, scale.cookd=sqrt)
# Evaluation of EVPs for potential outlying sets of points
w.n.diag1 = data.frame(w.n, pi.hat=round(save1$pi.hat, 2), std.res=round(save1$stand.resid, 2),
cookd=round(save1$cookd, 2), h=round(save1$h, 2))
p = length(mod.prelim1$coef) # number of parameters in model (# coefficients)
ck.out = abs(w.n.diag1$std.res)>2 | w.n.diag1$cookd>4/nrow(w.n) | w.n.diag1$h > 3*p/nrow(w.n)
extract.EVPs = w.n.diag1[ck.out, ]
extract.EVPs
rm(list = ls())
source('~/DAR/trash.R', echo=TRUE)
source('~/DAR/trash.R', echo=TRUE)
table(survive,shock_type)
12+20+20+14+14
source('~/DAR/trash.R')
source('~/DAR/trash.R')
#HL test
source("HLTest.R")
HLTest(mod.prelim1, 4)
#HL test
source("HLTest.R")
HLTest(mod.prelim1, 4)
HLTest(mod.prelim1, 5)
HLTest(mod.prelim1, 1)
HLTest(mod.prelim1, 5)
HLTest(mod.prelim1, 10)
HLTest(mod.prelim1, 3)
HLTest(mod.prelim1, 2)
HLTest(mod.prelim1, 3)
source('~/DAR/trash.R')
HLTest(mod.prelim1, 3)
HLTest(mod.prelim1, 3)
source('~/DAR/trash.R')
xtable(corrplot(cor(cont)))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = age))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = ht))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = sbp))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = map))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = hr))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = dbp))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = mcvp))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = bsi))
ggplot()+
geom_boxplot(mapping = aes(group = shock_type, y = ci))
exp(final$coefficients)
xtable(confused)
confused
49/69
32/43
threshold <- 35/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
47/69
34/42
34/43
threshold <- 43/112
predict.final <- ifelse(predict(final,type = "response")>threshold,1,0)
actual.final <- final$y
confused <- table(predict.final,actual.final)
confused
